{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sdas9\\\\Downloads\\\\Projects\\\\Web_Development\\\\dashboard-project\\\\src\\\\fetchData.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport 'randomcolor';\nimport CardElement from './CardElement';\nimport AppHeading from './AppHeading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar randomColor = require('randomcolor');\n\nexport default class FetchData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      app: null\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://api.npoint.io/1b802698dfff6b1c6ccb');\n    const data = await response.json();\n    const response1 = await fetch('https://api.npoint.io/d734975d2aee62d197ef');\n    const data1 = await response1.json();\n    var temp = [];\n    data.forEach(data => {\n      var key = data.id;\n      var lent = data1[key].length - 1;\n      var redirect1 = '/' + data.publisherName + '/' + key;\n      temp.push( /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          margin: '10px 0px 10px 0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          as: \"h3\",\n          children: /*#__PURE__*/_jsxDEV(AppHeading, {\n            to: redirect1,\n            publisherName: data.publisherName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(CardElement, {\n                title: \"Revenue\",\n                text: '$' + data1[key][lent].revenue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(CardElement, {\n                title: \"AdRequest\",\n                text: data1[key][lent].adRequest\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(CardElement, {\n                title: \"AdResponse\",\n                text: data1[key][lent].adResponse\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(CardElement, {\n                title: \"Impressions\",\n                text: data1[key][lent].impressions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this));\n    });\n    this.setState({\n      loading: false,\n      app: temp\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading || !this.state.app ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 59\n      }, this) : this.state.app\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sdas9/Downloads/Projects/Web_Development/dashboard-project/src/fetchData.js"],"names":["React","Card","Row","Col","ArrowForwardIcon","Button","Link","CardElement","AppHeading","randomColor","require","FetchData","Component","state","loading","app","componentDidMount","response","fetch","data","json","response1","data1","temp","forEach","key","id","lent","length","redirect1","publisherName","push","margin","revenue","adRequest","adResponse","impressions","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom';\r\nimport 'randomcolor'\r\nimport CardElement from './CardElement';\r\nimport AppHeading from './AppHeading';\r\nvar randomColor = require('randomcolor');\r\nexport default class FetchData extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        app: null,\r\n    }\r\n    async componentDidMount() {\r\n        const response = await fetch('https://api.npoint.io/1b802698dfff6b1c6ccb')\r\n        const data = await response.json();\r\n        const response1 = await fetch('https://api.npoint.io/d734975d2aee62d197ef')\r\n        const data1 = await response1.json();\r\n        var temp = []\r\n        data.forEach(data => {\r\n            var key = data.id\r\n            var lent = data1[key].length - 1\r\n            var redirect1 = '/' + data.publisherName + '/' + key\r\n            temp.push(\r\n                <Card style={{ margin: '10px 0px 10px 0px' }}>\r\n                    <Card.Header as='h3'>\r\n                        <AppHeading to={redirect1} publisherName={data.publisherName}>\r\n\r\n                        </AppHeading>\r\n\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col>\r\n                                <CardElement title='Revenue' text={'$' + data1[key][lent].revenue}></CardElement>\r\n                            </Col>\r\n                            <Col>\r\n                                <CardElement title='AdRequest' text={data1[key][lent].adRequest}></CardElement>\r\n                            </Col>\r\n                            <Col>\r\n                                <CardElement title='AdResponse' text={data1[key][lent].adResponse}></CardElement>\r\n                            </Col>\r\n                            <Col>\r\n                                <CardElement title='Impressions' text={data1[key][lent].impressions}></CardElement>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card >\r\n            )\r\n        })\r\n        this.setState({ loading: false, app: temp })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.state.loading || !this.state.app ? <div>Loading</div> : this.state.app}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}